<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Memory Game</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .card {
            display: inline-block;
            width: 100px;
            height: 100px;
            margin: 10px;
            background-color: lightblue;
            border: 2px solid white;
            cursor: pointer;
            font-size: 24px;
            line-height: 100px;
            transition: transform 0.3s ease;
        }
        .card.flipped {
            transform: rotateY(180deg);
            background-color: lightgreen;
        }
    </style>
</head>
<body>
    <div class="container" id="gameContainer">
        <h1>Memory Game</h1>
        <p>Match all the pairs of cards!</p>
        <div id="cardGrid"></div>
        <button onclick="resetGame()">Reset</button>
    </div>

    <script>
        const symbols = ['😀', '😎', '😍', '🥳', '🤯', '🎉', '🚀', '💡'];
        const cardPairs = symbols.concat(symbols);
        let flippedCards = [];
        let matchedPairs = 0;

        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        function createCard(symbol, index) {
            const cardElement = document.createElement('div');
            cardElement.classList.add('card');
            cardElement.dataset.symbol = symbol;
            cardElement.dataset.index = index;
            cardElement.innerText = '?';
            cardElement.addEventListener('click', function() {
                if (flippedCards.length < 2 && !this.classList.contains('flipped')) {
                    this.classList.add('flipped');
                    flippedCards.push(this);
                    if (flippedCards.length === 2) {
                        setTimeout(checkMatch, 700);
                    }
                }
            });
            return cardElement;
        }

        function checkMatch() {
            if (flippedCards[0].dataset.symbol === flippedCards[1].dataset.symbol) {
                matchedPairs++;
                flippedCards = [];
                if (matchedPairs === symbols.length) {
                    alert("Congratulations! You've matched all the pairs!");
                }
            } else {
                setTimeout(function() {
                    flippedCards.forEach(card => card.classList.remove('flipped'));
                    flippedCards = [];
                }, 1000);
            }
        }

        function resetGame() {
            const cardGrid = document.getElementById('cardGrid');
            cardGrid.innerHTML = '';
            flippedCards = [];
            matchedPairs = 0;
            const shuffledPairs = shuffleArray(cardPairs);
            shuffledPairs.forEach((symbol, index) => {
                const card = createCard(symbol, index);
                cardGrid.appendChild(card);
            });
        }

        document.addEventListener('DOMContentLoaded', resetGame);
    </script>
</body>
</html>
